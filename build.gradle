group 'nl.bioinf.ccpeters.gff_query'
version '1.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

mainClassName = 'nl.bioinf.ccpeters.gff_query.GffQuery'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('commons-cli:commons-cli:1.4')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.1.0'
}
//dependencies {
//    compile('commons-cli:commons-cli:1.4')
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//}

jar {
    description 'creates executable jar without dependencies'
    baseName = 'GffQuery-Jar'

    manifest {
        attributes 'Main-Class': mainClassName,
                "Class-Path": configurations.compile.collect { "lib/" + it.getName() }.join(' ')
    }
}

//create a single Jar with all dependencies
// see https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
    group 'build'
    description 'fat jar building with dependencies'

    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = 'GffQuery-Fatjar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task install(type: Copy) {
    group 'build'
    dependsOn build
    from configurations.runtime
    into "${project.projectDir}/build/libs/lib"
}